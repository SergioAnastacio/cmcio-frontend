name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  HotCache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run formatter
        run: npm run format

      - name: Run linter
        run: npm run lint

  BuildApp:
    runs-on: ubuntu-latest
    needs: HotCache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore Node.js modules cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build App
        run: npm run build

  BuildImage:
    runs-on: ubuntu-latest
    needs: BuildApp
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Install jq
        run: sudo apt-get install -y jq
      
      - name: Extract version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version < package.json)" >> $GITHUB_ENV

      - name: Set up environment variables
        run: echo "VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/sergioanastacio/cmcio-frontend:latest
            ghcr.io/sergioanastacio/cmcio-frontend:${{ env.VERSION }}
            ghcr.io/sergioanastacio/cmcio-frontend:${{ env.VERSION }}-${{ github.sha }}